{
	"scope": "source.osprey",

	"completions": [
		"abstract",
		"and",
		"base",
		"break",
		{"trigger": "catch\tcatch … in …", "contents": "catch ${1:Error} in ${2:e}\n{\t\n$0\n}"},
		"class",
		{"trigger": "const\tconst … = …;", "contents": "const ${1:x} = ${2:value};"},
		{"trigger": "do\tdo … while", "contents": "do\n{\n\t$0\n}${1: while ${2:true}};"},
		"else",
		"enum",
		"false",
		{"trigger": "finally\tfinally …", "contents": "finally\n{\n\t$0\n}"},
		{"trigger": "for\tfor … in …", "contents": "for ${1:item} in ${2:list}\n{\n\t$0\n}"},
		"function",
		"get",
		"global",
		{"trigger": "if\tif …", "contents": "if ${1:true}\n{\n\t$0\n}"},
		"in",
		"inheritable",
		"is",
		"iter",
		"namespace",
		"new",
		"next",
		"not",
		"null",
		"operator",
		"or",
		"overridable",
		"override",
		"private",
		"protected",
		"public",
		"ref",
		"refeq",
		"return",
		"set",
		"static",
		"this",
		{"trigger": "throw\tthrow …;", "contents": "throw ${1:new Error()};"},
		"true",
		{"trigger": "try\ttry … catch", "contents": "try\n{\n\t$0\n}\ncatch ${1:Error} in ${2:e}\n{\n\t${3:handleError(e);}\n}"},
		{"trigger": "tryf\ttry … finally", "contents": "try\n{\n\t$0\n}\nfinally\n{\n\t${1:cleanup();}\n}"},
		{"trigger": "typeof\ttypeof(…)", "contents": "typeof(${1:Object})"},
		"use",
		{"trigger": "usen\tuse namespace …;", "contents": "use namespace ${1:aves};"},
		{"trigger": "var\tvar … = …;", "contents": "var ${1:x} = ${2:value};"},
		{"trigger": "while\twhile …", "contents": "while ${1:true}\n{\n\t$0\n}"},
		{"trigger": "with\twith … = …", "contents": "with ${1:x} = ${2:expr}\n{\n\t$0\n}"},
		"xor",
		"yield"
	]
}
